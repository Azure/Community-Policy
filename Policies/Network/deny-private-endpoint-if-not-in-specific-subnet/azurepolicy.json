{
    "properties": {
        "name": "deny-pe-if-not-in-subnet",
        "displayName": "Deny Private Endpoints if not being deployed to a specific subnet",
        "policyType": "Custom",
        "mode": "All",
        "description": "This Policy will deny the creation of Private Endpoints if not within subnets that contain a key word.",
        "metadata": {
            "category": "Network"
        },
        "parameters": {
            "subnetName": {
                "type": "string",
                "metadata": {
                    "displayName": "Allowed Subnet prefix name (i.e. pls)",
                    "description": "Name of subnet where Private Endpoints are allowed to be deployed into."
                }
            },
            "exemptedGroupIds": {
                "type": "array",
                "metadata": {
                    "displayName": "Exempted Private Endpoint Group IDs",
                    "description": "The Group IDs that are exempted from this Policy (i.e. blob)"
                }
            }
        },
        "policyRule": {
            "if": {
                "allOf": [
                    {
                        "field": "type",
                        "equals": "Microsoft.Network/privateEndpoints"
                    },
                    {
                        "field": "Microsoft.Network/privateEndpoints/subnet.id",
                        "notContains": "[parameters('subnetName')]"
                    },
                    {
                        "count": {
                            "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                            "where": {
                                "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]",
                                "notIn": "[parameters('exemptedGroupIds')]"
                            }
                        },
                        "greaterOrEquals": 1
                    }
                ]
            },
            "then": {
                "effect": "deny"
            }
        }
    }
}