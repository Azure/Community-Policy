{
  "name": "5e63a2bc-be10-4169-b10c-4863b88344e4",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Prevent subnets without Route Table",
    "mode": "indexed",
    "description": "Policy description.",
    "metaData": {
      "category": "Network",
      "version": "1.0.0"
    },
    "parameters": {
      "effect": {
        "type": "String",
        "metadata": {
          "description": "The effect of the policy",
          "displayName": "Effect"
        },
        "allowedValues": [
          "audit",
          "deny",
          "disabled"
        ],
        "defaultValue": "deny"
      }
    },
    "policyRule": {
      "if": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks/subnets",
                "field": "type"
              },
              {
                "exists": "false",
                "field": "Microsoft.Network/virtualNetworks/subnets/routeTable.id"
              },
              {
                "field": "name",
                "notIn": [
                  "AzureFirewallManagementSubnet"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/virtualNetworks",
                "field": "type"
              },
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                  "where": {
                    "allOf": [
                      {
                        "exists": "false",
                        "field": "Microsoft.Network/virtualNetworks/subnets[*].routeTable.id"
                      },
                      {
                        "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                        "notIn": [
                          "AzureFirewallManagementSubnet"
                        ]
                      }
                    ]
                  }
                },
                "notEquals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
