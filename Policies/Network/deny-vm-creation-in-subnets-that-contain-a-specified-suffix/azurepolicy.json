{
  "name": "18e84f00-12e1-4612-b4a9-60a1c8be4fc8",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Deny VM creation in subnets that contain specified suffix",
    "mode": "All",
    "description": "This policy will deny the creation of VMs in subnets that contain a certain suffix.",
    "metaData": {
      "category": "Network",
      "version": "1.0.0"
    },
    "parameters": {
      "disallowedSubnet": {
        "type": "string",
        "metadata": {
          "displayname": "Deny VMs in subnets based on this name",
          "description": "VMs will not be allowed to provision into subnets that contain this word."
        }
      },
      "resourceGroupSuffix": {
        "type": "String",
        "metadata": {
          "displayName": "Resource Group Suffix",
          "description": "NICs deployed into Resource Groups containing this suffix are exempt from the Policy."
        }
      },
      "effect": {
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "type": "string",
        "metaData": {
          "description": "Deny, Audit or Disable the execution of the Policy",
          "displayName": "Policy effect"
        }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Network/networkInterfaces"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*]",
              "where": {
                "value": "[substring(last(split(string(field('Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id')), 'subnets/')), 0, sub(length(last(split(string(field('Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id')), 'subnets/'))), 2))]",
                "like": "[concat('*', parameters('disallowedSubnet'))]"
              }
            },
            "greater": 0
          },
          {
            "value": "[resourceGroup().name]",
            "notLike": "[concat('*', parameters('resourceGroupSuffix'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
