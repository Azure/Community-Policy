{
  "name": "55f27823-3d2b-4f60-bbc4-ae3ca76c8036",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Key Vault - Firewall Settings AUDIT",
    "description": "This Azure Policy creates an audit event when the 'Allow access from' setting is not set to 'Private endpoints and selected networks' or when the Firewall does contain any IP addresses outside of the approved ones.",
    "metadata": {
      "version": "1.0.0",
      "category": "Key Vault"
    },
    "mode": "All",
    "parameters": {
      "allowedAddressRanges": {
        "type": "Array",
        "metadata": {
          "displayName": "Allowed Address Ranges",
          "description": "The list of IP Addresses or IP Address Ranges that are allowed for the Firewall Setting on the Key Vault"
        }
      },
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Audit or Disabled the execution of the Policy"
        },
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.KeyVault/vaults"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "count": {
                      "field": "Microsoft.KeyVault/vaults/networkAcls.ipRules[*]"
                    },
                    "greater": 0
                  },
                  {
                    "not": {
                      "field": "Microsoft.KeyVault/vaults/networkAcls.ipRules[*].value",
                      "in": "[parameters('allowedAddressRanges')]"
                    }
                  }
                ]
              },
              {
                "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                "equals": "Allow"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
