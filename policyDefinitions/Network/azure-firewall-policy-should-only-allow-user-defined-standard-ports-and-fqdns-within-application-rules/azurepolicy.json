{
  "name": "328d08ca-00a2-4361-b285-38ad8f936918",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Azure firewall policy should only allow user defined standard ports and FQDNs within application rules",
    "description": "Enforce usage of user defined standard ports and FQDNs (default deny wildcard '*'). This is a common requirement in many regulatory and industry compliance standards.",
    "metadata": {
      "version": "1.0.0",
      "category": "Network"
    },
    "mode": "All",
    "parameters": {
      "priority": {
        "type": "Integer",
        "metadata": {
          "displayName": "Priority",
          "description": "Validate Azure firewall application rule priority. (Example: 999)."
        }
      },
      "allowedFQDNs": {
        "type": "Array",
        "metadata": {
          "displayName": "Allowed FQDNs",
          "description": "Provide target FQDNs (including wildcards) to allow. Example: [{'allowedFQDNs':['microsoft.com','*.servicebus.windows.net'],'ports':['443']}] )."
        }
      },
      "allowedPorts": {
        "type": "Array",
        "metadata": {
          "displayName": "Allowed Ports",
          "description": "Provide destination ports to to allow (Example : ['443','80'] )."
        }
      },
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "Deny, Audit or Disabled the execution of the Policy"
        },
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "equals": "Microsoft.Network/firewallPolicies/ruleCollectionGroups"
          },
          {
            "count": {
              "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*]",
              "where": {
                "anyOf": [
                  {
                    "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].priority",
                    "lessOrEquals": "[parameters('priority')]"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*]",
                      "where": {
                        "allOf": [
                          {
                            "count": {
                              "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.targetFqdns[*]",
                              "where": {
                                "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.targetFqdns[*]",
                                "contains": "*"
                              }
                            },
                            "greater": 0
                          },
                          {
                            "count": {
                              "value": "[parameters('allowedFQDNs')]",
                              "name": "allowedFQDN",
                              "where": {
                                "allOf": [
                                  {
                                    "count": {
                                      "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.targetFqdns[*]",
                                      "where": {
                                        "anyOf": [
                                          {
                                            "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.targetFqdns[*]",
                                            "notContains": "*"
                                          },
                                          {
                                            "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.targetFqdns[*]",
                                            "in": "[array(current('allowedFQDN').allowedFQDNs)]"
                                          }
                                        ]
                                      }
                                    },
                                    "greater": 0
                                  },
                                  {
                                    "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.protocols[*].port",
                                    "in": "[array(current('allowedFQDN').ports)]"
                                  }
                                ]
                              }
                            },
                            "equals": 0
                          }
                        ]
                      }
                    },
                    "greater": 0
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.protocols[*]",
                      "where": {
                        "field": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollections[*].FirewallPolicyFilterRuleCollection.rules[*].ApplicationRule.protocols[*].port",
                        "notIn": "[parameters('allowedPorts')]"
                      }
                    },
                    "greater": 0
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    }
  }
}
