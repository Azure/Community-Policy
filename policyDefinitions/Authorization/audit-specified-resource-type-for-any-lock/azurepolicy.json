{
  "name": "90ed0d51-2642-442f-b50c-f9a1b287a09c",
  "type": "Microsoft.Authorization/policyDefinitions",
  "properties": {
    "displayName": "Audit Specified Resource Type For Any Lock",
    "description": "This policy audits the specified resource type for any lock such as 'CanNotDelete' or 'ReadOnly'.",
    "metadata": {
      "version": "1.0.0",
      "category": "Authorization"
    },
    "mode": "All",
    "parameters": {
      "resourceTypes": {
        "type": "Array",
        "metadata": {
          "description": "Azure resource types to audit for any lock",
          "displayName": "resourceTypes"
        },
        "defaultValue": [
          "microsoft.network/expressroutecircuits",
          "microsoft.network/expressroutegateways",
          "microsoft.network/virtualnetworks",
          "microsoft.network/virtualnetworkgateways",
          "microsoft.network/vpngateways",
          "microsoft.network/p2svpngateways"
        ]
      },
      "lockLevel": {
        "type": "Array",
        "metadata": {
          "description": "The lock level to audit for",
          "displayName": "lockLevel"
        },
        "allowedValues": [
          "ReadOnly",
          "CanNotDelete"
        ],
        "defaultValue": [
          "ReadOnly",
          "CanNotDelete"
        ]
      },
      "effect": {
        "type": "String",
        "metadata": {
          "displayName": "Effect",
          "description": "AuditIfNotExists or Disabled the execution of the Policy"
        },
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "in": "[parameters('resourceTypes')]"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.Authorization/locks/level",
            "in": "[parameters('lockLevel')]"
          },
          "type": "Microsoft.Authorization/locks"
        },
        "effect": "[parameters('effect')]"
      }
    }
  }
}
